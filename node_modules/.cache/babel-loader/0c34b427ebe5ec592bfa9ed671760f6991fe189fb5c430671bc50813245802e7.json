{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      ads: [],\n      selectedAd: null,\n      selectedQuota: {}\n    };\n  },\n  methods: {\n    fetchAds: function fetchAds() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('https://iinfluencer.net/api/advertisement_request');\n            case 3:\n              response = _context.sent;\n              _this.ads = response.data;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to fetch ads', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    deleteAd: function deleteAd(id) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/advertisement_request/delete/\".concat(id));\n            case 3:\n              _this2.fetchAds(); // Refresh the list after deletion\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Failed to delete ad', _context2.t0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    },\n    viewAdDetails: function viewAdDetails(ad) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this3.selectedAd = ad;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.get(\"https://iinfluencer.net/api/quota?advertisement_request_id=\".concat(ad.id));\n            case 4:\n              response = _context3.sent;\n              _this3.selectedQuota = response.data.find(function (q) {\n                return q.advertisement_request_id === ad.id;\n              }) || {};\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Failed to fetch quota', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 8]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchAds();\n  }\n};","map":{"version":3,"names":["axios","data","ads","selectedAd","selectedQuota","methods","fetchAds","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","t0","console","error","stop","deleteAd","id","_this2","_callee2","_callee2$","_context2","concat","viewAdDetails","ad","_this3","_callee3","_callee3$","_context3","find","q","advertisement_request_id","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\OrderList.vue"],"sourcesContent":["<template>\r\n    <div class=\"orders-container\">\r\n      <div class=\"orders-list\" style=\"width: 66%;\">\r\n        <div v-for=\"ad in ads\" :key=\"ad.id\" class=\"order-item\">\r\n          <div class=\"order-details\">\r\n            <h4>{{ ad.title }}</h4>\r\n            <p>{{ ad.description }}</p>\r\n          </div>\r\n          <button @click=\"deleteAd(ad.id)\" class=\"delete-icon\">üóëÔ∏è</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"add-advertisement-form\" style=\"width: 33%;\">\r\n        <!-- Form to add new advertisement request -->\r\n        <!-- Use the form structure and classes you provided -->\r\n      </div>\r\n  \r\n      <!-- Dialog for viewing and editing advertisement details -->\r\n      <Dialog v-if=\"selectedAd\" @close=\"selectedAd = null\">\r\n        <div>\r\n          <h3>{{ selectedAd.title }}</h3>\r\n          <p>{{ selectedAd.description }}</p>\r\n          <p><strong>Target Audience:</strong> {{ selectedAd.target_audience }}</p>\r\n          <p><strong>Request Budget:</strong> {{ selectedAd.request_budget }}</p>\r\n          <!-- Add other fields as needed -->\r\n          <div>\r\n            <h4>Quota Information</h4>\r\n            <p>{{ selectedQuota.proposed_content }}</p>\r\n            <p>{{ selectedQuota.proposed_price }}</p>\r\n            <!-- Add quota form fields here -->\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  export default {\r\n    data() {\r\n      return {\r\n        ads: [],\r\n        selectedAd: null,\r\n        selectedQuota: {},\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchAds() {\r\n        try {\r\n          const response = await axios.get('https://iinfluencer.net/api/advertisement_request');\r\n          this.ads = response.data;\r\n        } catch (error) {\r\n          console.error('Failed to fetch ads', error);\r\n        }\r\n      },\r\n      async deleteAd(id) {\r\n        try {\r\n          await axios.delete(`https://iinfluencer.net/api/advertisement_request/delete/${id}`);\r\n          this.fetchAds();  // Refresh the list after deletion\r\n        } catch (error) {\r\n          console.error('Failed to delete ad', error);\r\n        }\r\n      },\r\n      async viewAdDetails(ad) {\r\n        this.selectedAd = ad;\r\n        try {\r\n          const response = await axios.get(`https://iinfluencer.net/api/quota?advertisement_request_id=${ad.id}`);\r\n          this.selectedQuota = response.data.find(q => q.advertisement_request_id === ad.id) || {};\r\n        } catch (error) {\r\n          console.error('Failed to fetch quota', error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchAds();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .orders-container {\r\n    display: flex;\r\n  }\r\n  \r\n  .orders-list {\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .order-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n    margin-bottom: 10px;\r\n    border-radius: 15px;\r\n  }\r\n  \r\n  .order-details {\r\n    flex: 1;\r\n  }\r\n  \r\n  .delete-icon {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}