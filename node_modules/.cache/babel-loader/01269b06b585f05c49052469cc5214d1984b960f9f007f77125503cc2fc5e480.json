{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: 'BrandTable',\n  data: function data() {\n    return {\n      brands: [],\n      newBrand: {\n        name: '',\n        description: '',\n        industry: '',\n        target_audience: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBrands();\n  },\n  methods: {\n    fetchBrands: function fetchBrands() {\n      var _this = this;\n      fetch('https://iinfluencer.net/api/brand/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log('Fetched Brands:', data); // Debugging: Check the data received\n        _this.brands = data; // Store the fetched brands in the data property\n      })[\"catch\"](function (error) {\n        console.error('Error fetching brands:', error);\n      });\n    },\n    addBrand: function addBrand() {\n      var _this2 = this;\n      fetch('https://iinfluencer.net/api/brand/store', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.newBrand)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.brands.push(data);\n        _this2.newBrand = {\n          name: '',\n          description: '',\n          industry: '',\n          target_audience: ''\n        };\n      })[\"catch\"](function (error) {\n        console.error('Error adding brand:', error);\n      });\n    },\n    deleteBrand: function deleteBrand(id) {\n      var _this3 = this;\n      fetch(\"https://iinfluencer.net/api/brand/delete/\".concat(id), {\n        method: 'DELETE'\n      }).then(function () {\n        _this3.brands = _this3.brands.filter(function (brand) {\n          return brand.id !== id;\n        });\n      })[\"catch\"](function (error) {\n        console.error('Error deleting brand:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","brands","newBrand","description","industry","target_audience","mounted","fetchBrands","methods","_this","fetch","method","headers","then","response","json","console","log","error","addBrand","_this2","body","JSON","stringify","push","deleteBrand","id","_this3","concat","filter","brand"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\BrandList.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"content-container\">\r\n      <!-- Table Section -->\r\n      <div class=\"table-section\">\r\n        <div class=\"table-container\">\r\n          <div class=\"product-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Description</th>\r\n                  <th>Target Audience</th>\r\n                  <th>Industry</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(brand, index) in brands\" :key=\"index\">\r\n                  <td>{{ brand.name }}</td>\r\n                  <td>{{ brand.description }}</td>\r\n                  <td>{{ brand.target_audience }}</td>\r\n                  <td>{{ brand.industry }}</td>\r\n                  <td>\r\n                    <button class=\"delete-button\" @click=\"deleteBrand(brand.id)\">\r\n                      üóëÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add Brand Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"add-product-form\">\r\n          <h3>Add New Brand</h3>\r\n          <form @submit.prevent=\"addBrand\">\r\n            <div class=\"input-group\">\r\n              <label for=\"brandName\">\r\n                <input type=\"text\" v-model=\"newBrand.name\" placeholder=\"Brand Name\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"brandDescription\">\r\n                <input type=\"text\" v-model=\"newBrand.description\" placeholder=\"Description\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"brandIndustry\">\r\n                <input type=\"text\" v-model=\"newBrand.industry\" placeholder=\"Industry\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"targetAudience\">\r\n                <input type=\"text\" v-model=\"newBrand.target_audience\" placeholder=\"Target Audience\" />\r\n              </label>\r\n            </div>\r\n            <button type=\"submit\" class=\"add-product-button\">Add Brand</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default { \r\n    name: 'BrandTable',\r\n    data() {\r\n      return {\r\n        brands: [],\r\n        newBrand: {\r\n          name: '',\r\n          description: '',\r\n          industry: '',\r\n          target_audience: '',\r\n        },\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchBrands();\r\n    },\r\n    methods: {\r\n      fetchBrands() {\r\n    fetch('https://iinfluencer.net/api/brand/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Fetched Brands:', data); // Debugging: Check the data received\r\n      this.brands = data; // Store the fetched brands in the data property\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching brands:', error);\r\n    });},\r\n      addBrand() {\r\n        fetch('https://iinfluencer.net/api/brand/store', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.newBrand),\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.brands.push(data);\r\n            this.newBrand = {\r\n              name: '',\r\n              description: '',\r\n              industry: '',\r\n              target_audience: '',\r\n            };\r\n          })\r\n          .catch(error => {\r\n            console.error('Error adding brand:', error);\r\n          });\r\n      },\r\n      deleteBrand(id) {\r\n        fetch(`https://iinfluencer.net/api/brand/delete/${id}`, {\r\n          method: 'DELETE',\r\n        })\r\n          .then(() => {\r\n            this.brands = this.brands.filter(brand => brand.id !== id);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting brand:', error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  @import \"@/assets/css/tablesandframe.css\";\r\n  </style>\r\n  "],"mappings":";;;;;AAoEE,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;QACRH,IAAI,EAAE,EAAE;QACRI,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACnB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAE,KAAA;MAChBC,KAAK,CAAC,oCAAoC,EAAE;QAC1CC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAC,IAAI,CAAC,UAAAC,QAAO;QAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAA,GAChCF,IAAI,CAAC,UAAAb,IAAG,EAAK;QACZgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEjB,IAAI,CAAC,EAAE;QACtCS,KAAI,CAACR,MAAK,GAAID,IAAI,EAAE;MACtB,CAAC,UACK,CAAC,UAAAkB,KAAI,EAAK;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IAAC,CAAC;IACFC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MAAA,IAAAC,MAAA;MACTV,KAAK,CAAC,yCAAyC,EAAE;QAC/CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACrB,QAAQ;MACpC,CAAC,EACEW,IAAI,CAAC,UAAAC,QAAO;QAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAAA,GAChCF,IAAI,CAAC,UAAAb,IAAG,EAAK;QACZoB,MAAI,CAACnB,MAAM,CAACuB,IAAI,CAACxB,IAAI,CAAC;QACtBoB,MAAI,CAAClB,QAAO,GAAI;UACdH,IAAI,EAAE,EAAE;UACRI,WAAW,EAAE,EAAE;UACfC,QAAQ,EAAE,EAAE;UACZC,eAAe,EAAE;QACnB,CAAC;MACH,CAAC,UACK,CAAC,UAAAa,KAAI,EAAK;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC;IACDO,WAAW,WAAXA,WAAWA,CAACC,EAAE,EAAE;MAAA,IAAAC,MAAA;MACdjB,KAAK,6CAAAkB,MAAA,CAA6CF,EAAE,GAAI;QACtDf,MAAM,EAAE;MACV,CAAC,EACEE,IAAI,CAAC,YAAM;QACVc,MAAI,CAAC1B,MAAK,GAAI0B,MAAI,CAAC1B,MAAM,CAAC4B,MAAM,CAAC,UAAAC,KAAI;UAAA,OAAKA,KAAK,CAACJ,EAAC,KAAMA,EAAE;QAAA,EAAC;MAC5D,CAAC,UACK,CAAC,UAAAR,KAAI,EAAK;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}