{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      employees: [],\n      roles: [],\n      newEmployee: {\n        full_name: '',\n        email: '',\n        phone: '',\n        user_name: '',\n        password: '',\n        role_ids: []\n      },\n      selectedEmployee: null\n    };\n  },\n  methods: {\n    fetchEmployees: function fetchEmployees() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('https://iinfluencer.net/api/company-employees', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context.sent;\n              _this.employees = response.data.companyEmployee;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Failed to fetch employees', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8]]);\n      }))();\n    },\n    fetchRoles: function fetchRoles() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get('https://iinfluencer.net/api/company/role', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context2.sent;\n              _this2.roles = response.data.roles;\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('There was an error fetching the roles!', _context2.t0);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8]]);\n      }))();\n    },\n    addEmployee: function addEmployee() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.post('https://iinfluencer.net/api/company-employees/store', _this3.newEmployee, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this3.fetchEmployees(); // Refresh the list after adding\n              _this3.resetForm(); // Reset the form fields\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Failed to add employee', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 8]]);\n      }))();\n    },\n    deleteEmployee: function deleteEmployee(id) {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context4.prev = 1;\n              _context4.next = 4;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/company-employees/delete/\".concat(id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this4.fetchEmployees(); // Refresh the list after deletion\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('Failed to delete employee', _context4.t0);\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 7]]);\n      }))();\n    },\n    viewEmployeeDetails: function viewEmployeeDetails(employee) {\n      this.selectedEmployee = employee;\n    },\n    closeDialog: function closeDialog() {\n      this.selectedEmployee = null;\n    },\n    resetForm: function resetForm() {\n      this.newEmployee = {\n        full_name: '',\n        email: '',\n        phone: '',\n        user_name: '',\n        password: '',\n        role_ids: []\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.fetchEmployees();\n    this.fetchRoles();\n  }\n};","map":{"version":3,"names":["axios","data","employees","roles","newEmployee","full_name","email","phone","user_name","password","role_ids","selectedEmployee","methods","fetchEmployees","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","get","headers","Authorization","concat","sent","companyEmployee","t0","console","error","stop","fetchRoles","_this2","_callee2","_callee2$","_context2","addEmployee","_this3","_callee3","_callee3$","_context3","post","resetForm","deleteEmployee","id","_this4","_callee4","_callee4$","_context4","viewEmployeeDetails","employee","closeDialog","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\EmployeeList.vue"],"sourcesContent":["<template>\r\n    <div class=\"orders-container\">\r\n      <div class=\"orders-list-container\">\r\n        <h3>Company Employee List</h3>\r\n        <div class=\"orders-list\">\r\n          <div \r\n            v-for=\"employee in employees\" \r\n            :key=\"employee.id\" \r\n            class=\"order-item\" \r\n            @click=\"viewEmployeeDetails(employee)\"\r\n          >\r\n            <div class=\"order-details\">\r\n              <h4>{{ employee.user.full_name }}</h4>\r\n              <p>{{ employee.user.phone || 'No phone available' }}</p>\r\n            </div>\r\n            <button @click.stop=\"deleteEmployee(employee.id)\" class=\"delete-button\">üóëÔ∏è</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"add-employee-form\">\r\n        <h3>Add New Employee</h3>\r\n        <form @submit.prevent=\"addEmployee\">\r\n          <div class=\"input-group\">\r\n            <label for=\"full_name\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"newEmployee.full_name\" \r\n                placeholder=\"Full Name\" \r\n                required \r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"email\">\r\n              <input \r\n                type=\"email\" \r\n                v-model=\"newEmployee.email\" \r\n                placeholder=\"Email\" \r\n                required \r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"phone\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"newEmployee.phone\" \r\n                placeholder=\"Phone\" \r\n                required \r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"user_name\">\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"newEmployee.user_name\" \r\n                placeholder=\"Username\" \r\n                required \r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"password\">\r\n              <input \r\n                type=\"password\" \r\n                v-model=\"newEmployee.password\" \r\n                placeholder=\"Password\" \r\n                required \r\n              />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"role_ids\">Roles</label>\r\n            <select multiple v-model=\"newEmployee.role_ids\" class=\"roles-select\">\r\n              <option \r\n                v-for=\"role in roles\" \r\n                :key=\"role.id\" \r\n                :value=\"role.id\"\r\n              >\r\n                {{ role.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" class=\"add-product-button\">Add Employee</button>\r\n        </form>\r\n      </div>\r\n  \r\n      <!-- Dialog for viewing and editing employee details -->\r\n      <dialog v-if=\"selectedEmployee\" @close=\"selectedEmployee = null\" open>\r\n        <div>\r\n          <h3>{{ selectedEmployee.user.full_name }}</h3>\r\n          <p><strong>Participation Date:</strong> {{ selectedEmployee.participation_date || 'N/A' }}</p>\r\n          <p><strong>Email:</strong> {{ selectedEmployee.user.email }}</p>\r\n          <p><strong>Phone:</strong> {{ selectedEmployee.user.phone || 'N/A' }}</p>\r\n          <p><strong>Username:</strong> {{ selectedEmployee.user.user_name }}</p>\r\n          <h4>Roles</h4>\r\n          <ul>\r\n            <li v-for=\"role in selectedEmployee.roles\" :key=\"role.id\">{{ role.name }}</li>\r\n          </ul>\r\n        </div>\r\n        <button @click=\"closeDialog\">Close</button>\r\n      </dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        employees: [],\r\n        roles: [],\r\n        newEmployee: {\r\n          full_name: '',\r\n          email: '',\r\n          phone: '',\r\n          user_name: '',\r\n          password: '',\r\n          role_ids: []\r\n        },\r\n        selectedEmployee: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchEmployees() {\r\n        const token = localStorage.getItem('access_token');\r\n        try {\r\n          const response = await axios.get('https://iinfluencer.net/api/company-employees', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.employees = response.data.companyEmployee;\r\n        } catch (error) {\r\n          console.error('Failed to fetch employees', error);\r\n        }\r\n      },\r\n      async fetchRoles() {\r\n        const token = localStorage.getItem('access_token');\r\n        try {\r\n          const response = await axios.get('https://iinfluencer.net/api/company/role', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.roles = response.data.roles;\r\n        } catch (error) {\r\n          console.error('There was an error fetching the roles!', error);\r\n        }\r\n      },\r\n      async addEmployee() {\r\n        const token = localStorage.getItem('access_token');\r\n        try {\r\n          await axios.post('https://iinfluencer.net/api/company-employees/store', this.newEmployee, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.fetchEmployees(); // Refresh the list after adding\r\n          this.resetForm(); // Reset the form fields\r\n        } catch (error) {\r\n          console.error('Failed to add employee', error);\r\n        }\r\n      },\r\n      async deleteEmployee(id) {\r\n        const token = localStorage.getItem('access_token');\r\n        try {\r\n          await axios.delete(`https://iinfluencer.net/api/company-employees/delete/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.fetchEmployees(); // Refresh the list after deletion\r\n        } catch (error) {\r\n          console.error('Failed to delete employee', error);\r\n        }\r\n      },\r\n      viewEmployeeDetails(employee) {\r\n        this.selectedEmployee = employee;\r\n      },\r\n      closeDialog() {\r\n        this.selectedEmployee = null;\r\n      },\r\n      resetForm() {\r\n        this.newEmployee = {\r\n          full_name: '',\r\n          email: '',\r\n          phone: '',\r\n          user_name: '',\r\n          password: '',\r\n          role_ids: []\r\n        };\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchEmployees();\r\n      this.fetchRoles();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .orders-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  \r\n  .orders-list { \r\n\r\n    height: 400px; /* Set a fixed height for the form */\r\n  overflow-y: auto; /* Enable vertical scrolling */\r\n\r\n  }\r\n  \r\n  .order-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n    margin-bottom: 10px;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .order-details {\r\n    flex-grow: 1;\r\n  }\r\n  \r\n  .delete-button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .add-employee-form {\r\n    margin-left: 40px;\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 10px; \r\n    height: 400px; /* Set a fixed height for the form */\r\n  overflow-y: auto; /* Enable vertical scrolling */\r\n\r\n  }\r\n  \r\n  .input-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .input-group input,\r\n  .input-group select {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border-radius: 30px;\r\n    border: 2px solid #C6CEDC;\r\n  }\r\n  \r\n  .roles-select {\r\n    height: 70px;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .add-product-button {\r\n    padding: 15px;\r\n    background-color: #E8C6CC;\r\n    border-radius: 30px;\r\n    border: none;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .add-product-button:hover {\r\n    background-color: #D6A6B4;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}