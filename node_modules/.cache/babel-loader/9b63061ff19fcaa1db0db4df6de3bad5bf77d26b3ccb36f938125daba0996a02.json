{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ProductList',\n  data: function data() {\n    return {\n      products: [],\n      // Initialize products array\n      brands: [],\n      // Initialize brands array\n      newProduct: {\n        name: '',\n        brand_id: '',\n        // Track the selected brand ID\n        price: null,\n        // Track the price\n        description: '' // Track the description\n      }\n    };\n  },\n  methods: {\n    // Fetch products from the backend\n    fetchProducts: function fetchProducts() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('https://iinfluencer.net/api/product', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context.sent;\n              _this.products = response.data;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching products:', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8]]);\n      }))();\n    },\n    // Fetch brands from the backend\n    fetchBrands: function fetchBrands() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get('https://iinfluencer.net/api/brand', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context2.sent;\n              _this2.brands = response.data;\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Error fetching brands:', _context2.t0);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8]]);\n      }))();\n    },\n    // Add a new product to the backend\n    addProduct: function addProduct() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('access_token'); // Log the product data to verify it's being populated correctly\n              console.log(\"New Product Data: \", _this3.newProduct);\n              if (_this3.newProduct.brand_id) {\n                _context3.next = 5;\n                break;\n              }\n              console.error('Brand ID is required');\n              return _context3.abrupt(\"return\");\n            case 5:\n              _context3.prev = 5;\n              _context3.next = 8;\n              return axios.post('https://iinfluencer.net/api/product/store', _this3.newProduct, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 8:\n              response = _context3.sent;\n              console.log('Product added successfully:', response.data);\n              _this3.products.push(response.data); // Assuming the API returns the created product\n              // Reset form fields \n              _this3.newProduct = {\n                name: '',\n                brand_id: '',\n                price: null,\n                description: ''\n              };\n              _context3.next = 17;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.error('Error adding product:', _context3.t0.response ? _context3.t0.response.data : _context3.t0.message);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[5, 14]]);\n      }))();\n    },\n    // Delete a product from the backend\n    deleteProduct: function deleteProduct(productId) {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context4.prev = 1;\n              _context4.next = 4;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/product/delete/\".concat(productId), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this4.products = _this4.products.filter(function (product) {\n                return product.id !== productId;\n              });\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('Error deleting product:', _context4.t0);\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 7]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchProducts(); // Fetch products when the component is mounted\n    this.fetchBrands(); // Fetch brands when the component is mounted\n  }\n};","map":{"version":3,"names":["axios","name","data","products","brands","newProduct","brand_id","price","description","methods","fetchProducts","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","get","headers","Authorization","concat","sent","t0","console","error","stop","fetchBrands","_this2","_callee2","_callee2$","_context2","addProduct","_this3","_callee3","_callee3$","_context3","log","abrupt","post","push","message","deleteProduct","productId","_this4","_callee4","_callee4$","_context4","filter","product","id","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-container\">\r\n    <!-- Table Section -->\r\n    <div class=\"table-section\">\r\n      <div class=\"table-container\">\r\n        <div class=\"product-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>PRODUCT</th>\r\n                <th>BRAND</th>\r\n                <th>PRICE</th>\r\n                <th>DESCRIPTION</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(product, index) in products\" :key=\"index\">\r\n                <td class=\"product-info\">\r\n                  <span>{{ product.name }}</span>\r\n                </td>\r\n                <!-- Safeguard against undefined product.brand -->\r\n                <td>{{ product.brand ? product.brand.name : 'Unknown Brand' }}</td>\r\n                <td>{{ product.price || 'N/A' }}</td> <!-- Show price or 'N/A' if null -->\r\n                <td>{{ product.description || 'N/A' }}</td> <!-- Show description or fallback text -->\r\n                <td>\r\n                  <button class=\"delete-button\" @click=\"deleteProduct(product.id)\">\r\n                    üóëÔ∏è\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Product Section -->\r\n    <div class=\"form-section\">\r\n      <div class=\"add-product-form\">\r\n        <h3>Add New Product</h3>\r\n        <form @submit.prevent=\"addProduct\">\r\n          <div class=\"input-group\">\r\n            <label for=\"productName\">\r\n              <input type=\"text\" v-model=\"newProduct.name\" placeholder=\"Product Name\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group select-wrapper\">\r\n            <label for=\"brandSelect\">\r\n              <select v-model=\"newProduct.brand_id\" class=\"styled-select\">\r\n                <option disabled value=\"\">Please select a brand</option>\r\n                <option v-for=\"brand in brands\" :key=\"brand.id\" :value=\"brand.id\">\r\n                  {{ brand.name }}\r\n                </option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"productPrice\">\r\n              <input type=\"number\" v-model=\"newProduct.price\" placeholder=\"Price\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"productDescription\">\r\n              <input type=\"text\" v-model=\"newProduct.description\" placeholder=\"Description\" />\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" class=\"add-product-button\">Add Product</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n  name: 'ProductList',\r\n  data() {\r\n    return {\r\n      products: [], // Initialize products array\r\n      brands: [], // Initialize brands array\r\n      newProduct: {\r\n        name: '',\r\n        brand_id: '', // Track the selected brand ID\r\n        price: null, // Track the price\r\n        description: '', // Track the description\r\n      },\r\n    };\r\n\r\n  },\r\n  methods: {\r\n    // Fetch products from the backend\r\n    async fetchProducts() {\r\n  const token = localStorage.getItem('access_token');\r\n  try {\r\n    const response = await axios.get('https://iinfluencer.net/api/product', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    this.products = response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n  }\r\n}\r\n,\r\n    // Fetch brands from the backend\r\n    async fetchBrands() {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        const response = await axios.get('https://iinfluencer.net/api/brand', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.brands = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching brands:', error);\r\n      }\r\n    },\r\n    // Add a new product to the backend\r\n    async addProduct() {\r\n  const token = localStorage.getItem('access_token');\r\n\r\n  // Log the product data to verify it's being populated correctly\r\n  console.log(\"New Product Data: \", this.newProduct);\r\n\r\n  if (!this.newProduct.brand_id) {\r\n    console.error('Brand ID is required');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://iinfluencer.net/api/product/store',\r\n      this.newProduct,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log('Product added successfully:', response.data);\r\n\r\n    this.products.push(response.data); // Assuming the API returns the created product\r\n    // Reset form fields \r\n    this.newProduct = {\r\n      name: '',\r\n      brand_id: '',\r\n      price: null,\r\n      description: '',\r\n    };\r\n  } catch (error) {\r\n    console.error('Error adding product:', error.response ? error.response.data : error.message);\r\n  }\r\n}\r\n\r\n,    // Delete a product from the backend\r\n    async deleteProduct(productId) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`https://iinfluencer.net/api/product/delete/${productId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.products = this.products.filter(product => product.id !== productId);\r\n      } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // Fetch products when the component is mounted\r\n    this.fetchBrands(); // Fetch brands when the component is mounted\r\n  }\r\n};\r\n</script> \r\n\r\n\r\n\r\n<style scoped>\r\n@import \"@/assets/css/tablesandframe.css\";\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}