{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'RegisterScreen',\n  data: function data() {\n    return {\n      full_name: '',\n      email: '',\n      user_name: '',\n      password: '',\n      showPassword: false\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('https://iinfluencer.net/api/register', {\n                full_name: _this.full_name,\n                email: _this.email,\n                password: _this.password,\n                user_name: _this.user_name\n              });\n            case 3:\n              response = _context.sent;\n              console.log('Registration successful:', response.data);\n              _this.$router.push({\n                name: 'LoginScreen'\n              });\n              _context.next = 12;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Registration failed:', _context.t0.response ? _context.t0.response.data : _context.t0.message);\n              alert(\"Registration failed: \".concat(_context.t0.response ? _context.t0.response.data.message : 'Please check your information.'));\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    togglePassword: function togglePassword() {\n      this.showPassword = !this.showPassword;\n      var passwordField = document.querySelector('#password');\n      passwordField.type = this.showPassword ? 'text' : 'password';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","full_name","email","user_name","password","showPassword","methods","register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","post","sent","console","log","$router","push","t0","error","message","alert","concat","stop","togglePassword","passwordField","document","querySelector","type"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\RegisterScreen.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h1>REGISTER</h1>\r\n      <p>Create Your Account</p>\r\n  \r\n      <form @submit.prevent=\"register\">\r\n        <div class=\"input-group\">\r\n          <label for=\"full_name\">\r\n            <span class=\"icon\">üë§</span>\r\n            <input type=\"text\" id=\"full_name\" placeholder=\"Full Name\" v-model=\"full_name\" required />\r\n          </label>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"email\">\r\n            <span class=\"icon\">‚úâÔ∏è</span>\r\n            <input type=\"email\" id=\"email\" placeholder=\"Email\" v-model=\"email\" required />\r\n          </label>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"user_name\">\r\n            <span class=\"icon\">üë§</span>\r\n            <input type=\"text\" id=\"user_name\" placeholder=\"Username\" v-model=\"user_name\" required />\r\n          </label>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"password\">\r\n            <span class=\"icon\">üîí</span>\r\n            <input type=\"password\" id=\"password\" placeholder=\"Password\" v-model=\"password\" required />\r\n            <span class=\"toggle-password\" @click=\"togglePassword\">üëÅÔ∏è</span>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" class=\"login-button\">Register</button>\r\n        <div class=\"reset-password\">\r\n        <div class=\"reset-password\">\r\n        <router-link to=\"/\">If you do have an account <span> LOGIN</span></router-link>\r\n      </div>\r\n      </div>\r\n      </form> \r\n\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'RegisterScreen',\r\n    data() {\r\n      return {\r\n        full_name: '',\r\n        email: '',\r\n        user_name: '',\r\n        password: '',\r\n        showPassword: false\r\n      };\r\n    },\r\n    methods: {\r\n      async register() {\r\n        try {\r\n          const response = await axios.post('https://iinfluencer.net/api/register', {\r\n            full_name: this.full_name,\r\n            email: this.email,\r\n            password: this.password,\r\n            user_name: this.user_name,\r\n           \r\n          });\r\n  \r\n          console.log('Registration successful:', response.data);\r\n  \r\n          this.$router.push({ name: 'LoginScreen' });\r\n        } catch (error) {\r\n  console.error('Registration failed:', error.response ? error.response.data : error.message);\r\n  alert(`Registration failed: ${error.response ? error.response.data.message : 'Please check your information.'}`);\r\n}\r\n\r\n      },\r\n      togglePassword() {\r\n        this.showPassword = !this.showPassword;\r\n        const passwordField = document.querySelector('#password');\r\n        passwordField.type = this.showPassword ? 'text' : 'password';\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n@import \"@/assets/css/styles.css\";\r\n</style>\r\n  "],"mappings":";;;AA2CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,QAAQ,WAARA,QAAQA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEUpB,KAAK,CAACqB,IAAI,CAAC,sCAAsC,EAAE;gBACxElB,SAAS,EAAEO,KAAI,CAACP,SAAS;gBACzBC,KAAK,EAAEM,KAAI,CAACN,KAAK;gBACjBE,QAAQ,EAAEI,KAAI,CAACJ,QAAQ;gBACvBD,SAAS,EAAEK,KAAI,CAACL;cAElB,CAAC,CAAC;YAAA;cANIU,QAAO,GAAAG,QAAA,CAAAI,IAAA;cAQbC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAET,QAAQ,CAACb,IAAI,CAAC;cAEtDQ,KAAI,CAACe,OAAO,CAACC,IAAI,CAAC;gBAAEzB,IAAI,EAAE;cAAc,CAAC,CAAC;cAAAiB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAElDK,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEV,QAAA,CAAAS,EAAA,CAAMZ,QAAO,GAAIG,QAAA,CAAAS,EAAA,CAAMZ,QAAQ,CAACb,IAAG,GAAIgB,QAAA,CAAAS,EAAA,CAAME,OAAO,CAAC;cAC3FC,KAAK,yBAAAC,MAAA,CAAyBb,QAAA,CAAAS,EAAA,CAAMZ,QAAO,GAAIG,QAAA,CAAAS,EAAA,CAAMZ,QAAQ,CAACb,IAAI,CAAC2B,OAAM,GAAI,gCAAgC,CAAE,CAAC;YAAA;YAAA;cAAA,OAAAX,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAG5G,CAAC;IACDmB,cAAc,WAAdA,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC1B,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;MACtC,IAAM2B,aAAY,GAAIC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;MACzDF,aAAa,CAACG,IAAG,GAAI,IAAI,CAAC9B,YAAW,GAAI,MAAK,GAAI,UAAU;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}