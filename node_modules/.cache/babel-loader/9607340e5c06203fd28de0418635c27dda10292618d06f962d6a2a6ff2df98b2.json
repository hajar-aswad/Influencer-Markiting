{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  name: 'CampaignList',\n  data: function data() {\n    return {\n      campaigns: [],\n      campaign: {\n        campaign_name: '',\n        campaign_description: '',\n        campaign_objective: '',\n        campaign_budget: '',\n        start_date: '',\n        end_date: ''\n      }\n    };\n  },\n  methods: {\n    // Fetch campaigns\n    fetchCampaigns: function fetchCampaigns() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('https://iinfluencer.net/api/campaign', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context.sent;\n              _this.campaigns = response.data;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Failed to fetch campaigns', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8]]);\n      }))();\n    },\n    // Get Influencer Names\n    getInfluencerNames: function getInfluencerNames(influencers) {\n      return influencers.map(function (influencer) {\n        return influencer.name;\n      }).join(', ');\n    },\n    saveCampaign: function saveCampaign() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, formattedStartDate, formattedEndDate, campaignPayload;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('access_token'); // Ensure the dates are in the correct format (YYYY-MM-DD)\n              formattedStartDate = _this2.campaign.start_date ? new Date(_this2.campaign.start_date).toISOString().split('T')[0] : null;\n              formattedEndDate = _this2.campaign.end_date ? new Date(_this2.campaign.end_date).toISOString().split('T')[0] : null; // Prepare the payload\n              campaignPayload = {\n                campaign_name: _this2.campaign.campaign_name,\n                campaign_description: _this2.campaign.campaign_description,\n                campaign_objective: _this2.campaign.campaign_objective,\n                campaign_budget: _this2.campaign.campaign_budget,\n                start_date: formattedStartDate,\n                end_date: formattedEndDate\n              };\n              _context2.prev = 4;\n              _context2.next = 7;\n              return axios.post('{{url}}/campaign/store', campaignPayload, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 7:\n              _this2.fetchCampaigns(); // Refresh the list after adding\n              _this2.resetForm(); // Reset the form fields\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.error('Failed to save campaign', _context2.t0);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 11]]);\n      }))();\n    },\n    // Other methods remain unchanged\n    // Delete a campaign\n    deleteCampaign: function deleteCampaign(id) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/campaign/delete/\".concat(id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this3.fetchCampaigns(); // Refresh the list after deletion\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Failed to delete campaign', _context3.t0);\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 7]]);\n      }))();\n    },\n    // Reset the form after saving\n    resetForm: function resetForm() {\n      this.campaign = {\n        campaign_name: '',\n        campaign_description: '',\n        campaign_objective: '',\n        campaign_budget: '',\n        start_date: '',\n        end_date: ''\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.fetchCampaigns();\n  }\n};","map":{"version":3,"names":["axios","name","data","campaigns","campaign","campaign_name","campaign_description","campaign_objective","campaign_budget","start_date","end_date","methods","fetchCampaigns","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","get","headers","Authorization","concat","sent","t0","console","error","stop","getInfluencerNames","influencers","map","influencer","join","saveCampaign","_this2","_callee2","formattedStartDate","formattedEndDate","campaignPayload","_callee2$","_context2","Date","toISOString","split","post","resetForm","deleteCampaign","id","_this3","_callee3","_callee3$","_context3","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\CampaignList.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-container\">\r\n    <!-- Campaigns Table Section -->\r\n    <div class=\"table-section\">\r\n      <div class=\"table-container\">\r\n        <div class=\"product-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Campaign Name</th>\r\n                <th>Description</th>\r\n                <th>Objective</th>\r\n                <th>Budget</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Influencer Name</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(campaign, index) in campaigns\" :key=\"index\">\r\n                <td>{{ campaign.campaign.campaign_name || 'N/A' }}</td>\r\n                <td>{{ campaign.campaign.campaign_description }}</td>\r\n                <td>{{ campaign.campaign.campaign_objective }}</td>\r\n                <td>{{ campaign.campaign.campaign_budget }}</td>\r\n                <td>{{ campaign.campaign.start_date }}</td>\r\n                <td>{{ campaign.campaign.end_date }}</td>\r\n                <td>{{ getInfluencerNames(campaign.influencers) }}</td>\r\n                <td>\r\n                  <button class=\"delete-button\" @click=\"deleteCampaign(campaign.campaign.id)\">üóëÔ∏è</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add/Update Campaign Section -->\r\n    <div class=\"form-section\">\r\n      <div class=\"add-product-form\"> \r\n          <h3>Start New Campaign</h3>\r\n\r\n          <form @submit.prevent=\"saveCampaign\">\r\n              <div class=\"input-group\">\r\n            <input type=\"text\" v-model=\"campaign.campaign_name\" placeholder=\"Campaign Name\" required />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" v-model=\"campaign.campaign_description\" placeholder=\"Campaign Description\" required />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" v-model=\"campaign.campaign_objective\" placeholder=\"Campaign Objective\" required />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input type=\"number\" v-model=\"campaign.campaign_budget\" placeholder=\"Campaign Budget\" required />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <h5>Enter start date </h5>\r\n\r\n            <input type=\"date\" v-model=\"campaign.start_date\" placeholder=\"Start Date\" required />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <h5>Enter end date </h5>\r\n\r\n            <input type=\"date\" v-model=\"campaign.end_date\" placeholder=\"End Date\" required />\r\n          </div> \r\n          <button type=\"submit\" class=\"add-product-button\">Start</button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CampaignList',\r\n  data() {\r\n    return {\r\n      campaigns: [],\r\n      campaign: {\r\n        campaign_name: '',\r\n        campaign_description: '',\r\n        campaign_objective: '',\r\n        campaign_budget: '',\r\n        start_date: '',\r\n        end_date: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // Fetch campaigns\r\n    async fetchCampaigns() {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        const response = await axios.get('https://iinfluencer.net/api/campaign', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.campaigns = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch campaigns', error);\r\n      }\r\n    },\r\n    \r\n    // Get Influencer Names\r\n    getInfluencerNames(influencers) {\r\n      return influencers.map(influencer => influencer.name).join(', ');\r\n    },\r\n\r\n  async saveCampaign() {\r\n    const token = localStorage.getItem('access_token');\r\n\r\n    // Ensure the dates are in the correct format (YYYY-MM-DD)\r\n    const formattedStartDate = this.campaign.start_date ? new Date(this.campaign.start_date).toISOString().split('T')[0] : null;\r\n    const formattedEndDate = this.campaign.end_date ? new Date(this.campaign.end_date).toISOString().split('T')[0] : null;\r\n\r\n    // Prepare the payload\r\n    const campaignPayload = {\r\n      campaign_name: this.campaign.campaign_name,\r\n      campaign_description: this.campaign.campaign_description,\r\n      campaign_objective: this.campaign.campaign_objective,\r\n      campaign_budget: this.campaign.campaign_budget,\r\n      start_date: formattedStartDate,\r\n      end_date: formattedEndDate\r\n    };\r\n\r\n    try {\r\n      await axios.post('{{url}}/campaign/store', campaignPayload, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      this.fetchCampaigns(); // Refresh the list after adding\r\n      this.resetForm(); // Reset the form fields\r\n    } catch (error) {\r\n      console.error('Failed to save campaign', error);\r\n    }\r\n  },\r\n  // Other methods remain unchanged\r\n\r\n\r\n    // Delete a campaign\r\n    async deleteCampaign(id) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`https://iinfluencer.net/api/campaign/delete/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.fetchCampaigns(); // Refresh the list after deletion\r\n      } catch (error) {\r\n        console.error('Failed to delete campaign', error);\r\n      }\r\n    },\r\n\r\n    // Reset the form after saving\r\n    resetForm() {\r\n      this.campaign = {\r\n        campaign_name: '',\r\n        campaign_description: '',\r\n        campaign_objective: '',\r\n        campaign_budget: '',\r\n        start_date: '',\r\n        end_date: ''\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchCampaigns();\r\n  }\r\n};\r\n</script>\r\n\r\n  <style scoped>\r\n  @import \"@/assets/css/tablesandframe.css\";\r\n\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}