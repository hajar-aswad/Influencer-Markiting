{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: 'BrandTable',\n  data: function data() {\n    return {\n      brands: [],\n      // Brands data for brand table\n      newBrand: {\n        name: '',\n        description: '',\n        industry: '',\n        target_audience: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBrands();\n  },\n  methods: {\n    fetchBrands: function fetchBrands() {\n      var _this = this;\n      fetch('https://iinfluencer.net/api/brand/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        return response.json();\n      }).then(function (data) {\n        console.log('Fetched Brands:', data); // Debugging: Check the data received\n        if (Array.isArray(data)) {\n          _this.brands = data; // Store the fetched brands in the data property\n        } else {\n          console.error('Unexpected data format:', data);\n        }\n      })[\"catch\"](function (error) {\n        console.error('Error fetching brands:', error);\n      });\n    },\n    addBrand: function addBrand() {\n      var _this2 = this;\n      fetch('https://iinfluencer.net/api/brand/store', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.newBrand)\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        return response.json();\n      }).then(function (data) {\n        console.log('Added Brand Response:', data); // Debugging: Check the data received\n        if (data && data.id) {\n          // Ensure the response contains valid brand data\n          _this2.brands.push(data); // Add the new brand to the brands array\n          // Reset the newBrand form fields\n          _this2.newBrand = {\n            name: '',\n            description: '',\n            industry: '',\n            target_audience: ''\n          };\n        } else {\n          console.error('Unexpected response:', data);\n        }\n      })[\"catch\"](function (error) {\n        console.error('Error adding brand:', error);\n      });\n    },\n    deleteBrand: function deleteBrand(id) {\n      var _this3 = this;\n      fetch(\"https://iinfluencer.net/api/brand/delete/\".concat(id), {\n        method: 'DELETE'\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        _this3.brands = _this3.brands.filter(function (brand) {\n          return brand.id !== id;\n        });\n      })[\"catch\"](function (error) {\n        console.error('Error deleting brand:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","brands","newBrand","description","industry","target_audience","mounted","fetchBrands","methods","_this","fetch","method","headers","then","response","ok","Error","concat","status","json","console","log","Array","isArray","error","addBrand","_this2","body","JSON","stringify","id","push","deleteBrand","_this3","filter","brand"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\BrandList.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-container\">\r\n    <!-- Table Section -->\r\n    <div class=\"table-section\">\r\n      <div class=\"table-container\">\r\n        <div class=\"product-table\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th>Target Audience</th>\r\n                <th>Industry</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(brand, index) in brands\" :key=\"index\">\r\n                <td>{{ brand.name }}</td>\r\n                <td>{{ brand.description }}</td>\r\n                <td>{{ brand.target_audience }}</td>\r\n                <td>{{ brand.industry }}</td>\r\n                <td>\r\n                  <button class=\"delete-button\" @click=\"deleteBrand(brand.id)\">\r\n                    üóëÔ∏è\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Brand Section -->\r\n    <div class=\"form-section\">\r\n      <div class=\"add-product-form\">\r\n        <h3>Add New Brand</h3>\r\n        <form @submit.prevent=\"addBrand\">\r\n          <div class=\"input-group\">\r\n            <label for=\"brandName\">\r\n              <input type=\"text\" v-model=\"newBrand.name\" placeholder=\"Brand Name\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"brandDescription\">\r\n              <input type=\"text\" v-model=\"newBrand.description\" placeholder=\"Description\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"brandIndustry\">\r\n              <input type=\"text\" v-model=\"newBrand.industry\" placeholder=\"Industry\" />\r\n            </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <label for=\"targetAudience\">\r\n              <input type=\"text\" v-model=\"newBrand.target_audience\" placeholder=\"Target Audience\" />\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" class=\"add-product-button\">Add Brand</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: 'BrandTable',\r\n  data() {\r\n  return {\r\n    brands: [], // Brands data for brand table\r\n    newBrand: {\r\n      name: '',\r\n      description: '',\r\n      industry: '',\r\n      target_audience: '',\r\n    },\r\n  };\r\n},\r\n  mounted() {\r\n    this.fetchBrands();\r\n  },\r\n  methods: {\r\n    fetchBrands() {\r\n      fetch('https://iinfluencer.net/api/brand/', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Fetched Brands:', data); // Debugging: Check the data received\r\n        if (Array.isArray(data)) {\r\n          this.brands = data; // Store the fetched brands in the data property\r\n        } else {\r\n          console.error('Unexpected data format:', data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching brands:', error);\r\n      });\r\n    },\r\n    addBrand() {\r\n      fetch('https://iinfluencer.net/api/brand/store', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(this.newBrand),\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Added Brand Response:', data); // Debugging: Check the data received\r\n        if (data && data.id) { // Ensure the response contains valid brand data\r\n          this.brands.push(data); // Add the new brand to the brands array\r\n          // Reset the newBrand form fields\r\n          this.newBrand = {\r\n            name: '',\r\n            description: '',\r\n            industry: '',\r\n            target_audience: '',\r\n          };\r\n        } else {\r\n          console.error('Unexpected response:', data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error adding brand:', error);\r\n      });\r\n    },\r\n    deleteBrand(id) {\r\n      fetch(`https://iinfluencer.net/api/brand/delete/${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        this.brands = this.brands.filter(brand => brand.id !== id);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting brand:', error);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"@/assets/css/tablesandframe.css\";\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}