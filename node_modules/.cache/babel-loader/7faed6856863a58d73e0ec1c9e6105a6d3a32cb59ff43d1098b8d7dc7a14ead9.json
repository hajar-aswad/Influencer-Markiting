{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { mapState } from 'vuex';\nexport default {\n  computed: _objectSpread({}, mapState(['user'])),\n  data: function data() {\n    return {\n      location: {\n        city: '',\n        state: '',\n        province: '',\n        country: '',\n        address_line: ''\n      },\n      roles: [],\n      newRole: {\n        name: '',\n        level: ''\n      }\n    };\n  },\n  methods: {\n    fetchLocation: function fetchLocation() {\n      var _this = this;\n      // Replace `{{url}}` with your actual base URL\n      fetch('https://iinfluencer.net/api/location').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.location = {\n          city: data[0].city,\n          state: data[0].state,\n          province: data[0].province,\n          country: data[0].country,\n          address_line: data[0].address_line\n        };\n      });\n    },\n    editLocation: function editLocation() {\n      var id = 1; // Replace with dynamic ID if needed\n      fetch(\"https://iinfluencer.net/api/location/update/\".concat(id), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.location)\n      }).then(function (response) {\n        if (response.ok) {\n          alert('Location updated successfully!');\n        } else {\n          alert('Failed to update location.');\n        }\n      });\n    },\n    fetchRoles: function fetchRoles() {\n      var _this2 = this;\n      fetch('https://iinfluencer.net/api/company/role', {\n        headers: {\n          'Authorization': 'Bearer your-token-here'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.roles = data.roles;\n      });\n    },\n    deleteRole: function deleteRole(roleId) {\n      var _this3 = this;\n      fetch(\"https://iinfluencer.net/api/company/role/delete/\".concat(roleId), {\n        method: 'DELETE',\n        headers: {\n          'Authorization': 'Bearer your-token-here'\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          _this3.roles = _this3.roles.filter(function (role) {\n            return role.id !== roleId;\n          });\n        }\n      });\n    },\n    addRole: function addRole() {\n      // Handle adding a new role to the list\n      this.roles.push(_objectSpread({}, this.newRole));\n      this.newRole.name = '';\n      this.newRole.level = '';\n    }\n  },\n  mounted: function mounted() {\n    this.fetchLocation();\n    this.fetchRoles();\n  }\n};","map":{"version":3,"names":["mapState","computed","_objectSpread","data","location","city","state","province","country","address_line","roles","newRole","name","level","methods","fetchLocation","_this","fetch","then","response","json","editLocation","id","concat","method","headers","body","JSON","stringify","ok","alert","fetchRoles","_this2","deleteRole","roleId","_this3","filter","role","addRole","push","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\AccountInfo.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n      <div class=\"account-info-section\">\r\n        <div class=\"account-info\">\r\n        <h2>Account Information</h2>\r\n        <p><strong>Full Name:</strong> {{ user.full_name }}</p>\r\n        <p><strong>Email:</strong> {{ user.email }}</p>\r\n        <p><strong>Username:</strong> {{ user.user_name }}</p>\r\n        <p><strong>Role:</strong> {{ user.role }}</p>\r\n        <p><strong>Domain:</strong> {{ user.domain }}</p>\r\n        <p><strong>Industry:</strong> {{ user.industry }}</p>\r\n        <p><strong>Jointed  At:</strong> {{ user.created_at }}</p>\r\n      </div>\r\n  \r\n        <div class=\"company-location\">\r\n          <h2>Company Location</h2>\r\n          <form>\r\n            <div class=\"input-group\">\r\n              <label for=\"city\">City</label>\r\n              <input type=\"text\" id=\"city\" v-model=\"location.city\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"state\">State</label>\r\n              <input type=\"text\" id=\"state\" v-model=\"location.state\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"province\">Province</label>\r\n              <input type=\"text\" id=\"province\" v-model=\"location.province\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"country\">Country</label>\r\n              <input type=\"text\" id=\"country\" v-model=\"location.country\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"address_line\">Address Line</label>\r\n              <input type=\"text\" id=\"address_line\" v-model=\"location.address_line\" />\r\n            </div>\r\n            <button @click=\"editLocation\" class=\"edit-button\">Edit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Second Part: Roles Management -->\r\n      <div class=\"roles-section\">\r\n        <div class=\"roles-list\">\r\n          <h2>Roles</h2>\r\n          <ul>\r\n            <li v-for=\"role in roles\" :key=\"role.id\">\r\n              {{ role.name }} (Level: {{ role.level }})\r\n              <span class=\"delete-icon\" @click=\"deleteRole(role.id)\">üóëÔ∏è</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n  \r\n        <div class=\"add-role-form\">\r\n          <h2>Add New Role</h2>\r\n          <form>\r\n            <div class=\"input-group\">\r\n              <label for=\"name\">Role Name</label>\r\n              <input type=\"text\" id=\"name\" v-model=\"newRole.name\" />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"level\">Role Level</label>\r\n              <input type=\"text\" id=\"level\" v-model=\"newRole.level\" />\r\n            </div>\r\n            <button @click.prevent=\"addRole\" class=\"add-button\">Add Role</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Third Part: Empty Container -->\r\n      <div class=\"empty-container\">\r\n        <!-- Empty for now -->\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapState } from 'vuex';\r\n  \r\n\r\nexport default { \r\n \r\n\r\n    computed: {\r\n    ...mapState(['user'])\r\n  }\r\n\r\n  ,\r\n  data() {\r\n    return {\r\n      location: {\r\n        city: '',\r\n        state: '',\r\n        province: '',\r\n        country: '',\r\n        address_line: ''\r\n      },\r\n      roles: [],\r\n      newRole: {\r\n        name: '',\r\n        level: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    fetchLocation() {\r\n      // Replace `{{url}}` with your actual base URL\r\n      fetch('https://iinfluencer.net/api/location')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.location = {\r\n            city: data[0].city,\r\n            state: data[0].state,\r\n            province: data[0].province,\r\n            country: data[0].country,\r\n            address_line: data[0].address_line\r\n          };\r\n        });\r\n    },\r\n    editLocation() {\r\n      const id = 1; // Replace with dynamic ID if needed\r\n      fetch(`https://iinfluencer.net/api/location/update/${id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.location)\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert('Location updated successfully!');\r\n        } else {\r\n          alert('Failed to update location.');\r\n        }\r\n      });\r\n    },\r\n    fetchRoles() {\r\n      fetch('https://iinfluencer.net/api/company/role', {\r\n        headers: {\r\n          'Authorization': 'Bearer your-token-here'\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.roles = data.roles;\r\n      });\r\n    },\r\n    deleteRole(roleId) {\r\n      fetch(`https://iinfluencer.net/api/company/role/delete/${roleId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': 'Bearer your-token-here'\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          this.roles = this.roles.filter(role => role.id !== roleId);\r\n        }\r\n      });\r\n    },\r\n    addRole() {\r\n      // Handle adding a new role to the list\r\n      this.roles.push({...this.newRole});\r\n      this.newRole.name = '';\r\n      this.newRole.level = '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchLocation();\r\n    this.fetchRoles();\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  </script>\r\n<style scoped>\r\n.main-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  gap: 30px; /* Add gap between the columns */\r\n  padding: 20px;\r\n}\r\n\r\n.account-info-section, .roles-section, .empty-container { \r\n    overflow-y: auto;\r\n\r\n  width: 30%;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #F6BDC6;\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n}\r\n\r\n.input-group label {\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.input-group input {\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  background-image: none;\r\n  width: 100%;\r\n  padding: 15px;\r\n  padding-left: 45px;\r\n  border-radius: 30px;\r\n  border: 2px solid #C6CEDC;\r\n  font-size: 16px;\r\n  outline: none;\r\n  transition: border-color 0.3s ease;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.input-group input:focus {\r\n  border-color: #86ADC3;\r\n}\r\n\r\n.edit-button, .add-button {\r\n  background-color: #E8C6CC;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 30px;\r\n  color: #FFF;\r\n  cursor: pointer;\r\n}\r\n\r\n.roles-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.roles-list li {\r\n  background-color: #C6CEDC;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.delete-icon {\r\n  cursor: pointer;\r\n  color: #FF0000;\r\n}\r\n\r\n.empty-container {\r\n  background-color: #C6CEDC;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}