{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ListsLists',\n  data: function data() {\n    return {\n      lists: [],\n      newList: {\n        list_name: '',\n        filtering_criteria: ''\n      }\n    };\n  },\n  computed: {\n    computed: {\n      companyId: function companyId() {\n        var token = localStorage.getItem('access_token');\n        if (!token) {\n          console.error('No token found');\n          return null;\n        }\n        try {\n          var base64Url = token.split('.')[1];\n          var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n          var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n          console.log('Decoded Payload:', jsonPayload); // Log the entire payload\n\n          var payload = JSON.parse(jsonPayload);\n          if (!payload.company_id) {\n            console.error('company_id not found in token payload:', payload);\n            return null;\n          }\n          return payload.company_id;\n        } catch (error) {\n          console.error('Error decoding token:', error);\n          return null;\n        }\n      }\n    }\n  },\n  methods: {\n    fetchLists: function fetchLists() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var company_id, token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              company_id = _this.companyId;\n              token = localStorage.getItem('access_token');\n              if (company_id) {\n                _context.next = 5;\n                break;\n              }\n              console.error('company_id not available');\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.get(\"https://iinfluencer.net/api/list?company_id=\".concat(company_id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 8:\n              response = _context.sent;\n              _this.lists = response.data;\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              console.error('Error fetching lists:', _context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 12]]);\n      }))();\n    },\n    createList: function createList() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var company_id, token, response, createdList;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              company_id = _this2.companyId;\n              token = localStorage.getItem('access_token');\n              if (company_id) {\n                _context2.next = 5;\n                break;\n              }\n              console.error('company_id not available');\n              return _context2.abrupt(\"return\");\n            case 5:\n              _context2.prev = 5;\n              _context2.next = 8;\n              return axios.post('https://iinfluencer.net/api/list/store', {\n                company_id: company_id,\n                list_name: _this2.newList.list_name,\n                filtering_criteria: _this2.newList.filtering_criteria\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 8:\n              response = _context2.sent;\n              createdList = {\n                list_name: response.data.list_name,\n                filtering_criteria: response.data.filtering_criteria\n              };\n              _this2.lists.push(createdList); // Add the newly created list to the lists array\n\n              // Reset the form\n              _this2.newList = {\n                list_name: '',\n                filtering_criteria: ''\n              };\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](5);\n              console.error('Error creating list:', _context2.t0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[5, 14]]);\n      }))();\n    },\n    deleteList: function deleteList(id) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/list/delete/\".concat(id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this3.lists = _this3.lists.filter(function (list) {\n                return list.id !== id;\n              });\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Error deleting lists :', _context3.t0);\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 7]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchLists();\n  }\n};","map":{"version":3,"names":["axios","name","data","lists","newList","list_name","filtering_criteria","computed","companyId","token","localStorage","getItem","console","error","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","log","payload","JSON","parse","company_id","methods","fetchLists","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","abrupt","get","concat","headers","Authorization","sent","t0","stop","createList","_this2","_callee2","createdList","_callee2$","_context2","post","push","deleteList","id","_this3","_callee3","_callee3$","_context3","filter","list","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\ListsLists.vue"],"sourcesContent":["<template>\r\n    <div class=\"content-container\">\r\n      <!-- Table Section -->\r\n      <div class=\"table-section\">\r\n        <div class=\"table-container\">\r\n          <div class=\"product-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>List Name</th>\r\n                  <th>Filtering Criteria</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(list, index) in lists\" :key=\"index\">\r\n                  <td>{{ list.listName }}</td> <!-- List name -->\r\n                  <td>{{ list.filteringCriteria || 'N/A' }}</td> <!-- Show description or fallback text -->\r\n                  <td>\r\n                    <button class=\"delete-button\" @click=\"deleteList(list.id)\">\r\n                      üóëÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add List Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"add-product-form\">\r\n          <h3>Add New List</h3>\r\n          <form @submit.prevent=\"createList\">\r\n            <div class=\"input-group\">\r\n              <label for=\"listName\">\r\n                <input type=\"text\" v-model=\"newList.list_name\" placeholder=\"List Name\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"filteringCriteria\">\r\n                <input type=\"text\" v-model=\"newList.filtering_criteria\" placeholder=\"Filtering Criteria\" />\r\n              </label>\r\n            </div>\r\n  \r\n            <button type=\"submit\" class=\"add-product-button\">Add New List</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n  name: 'ListsLists',\r\n\r\n  data() {\r\n    return {\r\n      lists: [], \r\n      newList: {\r\n        list_name: '', \r\n        filtering_criteria: '' \r\n      }\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    computed: {\r\n  companyId() {\r\n    const token = localStorage.getItem('access_token');\r\n    if (!token) {\r\n      console.error('No token found');\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const base64Url = token.split('.')[1];\r\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      }).join(''));\r\n\r\n      console.log('Decoded Payload:', jsonPayload); // Log the entire payload\r\n\r\n      const payload = JSON.parse(jsonPayload);\r\n\r\n      if (!payload.company_id) {\r\n        console.error('company_id not found in token payload:', payload);\r\n        return null;\r\n      }\r\n\r\n      return payload.company_id;\r\n\r\n    } catch (error) {\r\n      console.error('Error decoding token:', error);\r\n      return null;\r\n    }\r\n  }\r\n},\r\n  },\r\n\r\n  methods: { \r\n    async fetchLists() {\r\n      const company_id = this.companyId;\r\n      const token = localStorage.getItem('access_token');\r\n\r\n      if (!company_id) {\r\n        console.error('company_id not available');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`https://iinfluencer.net/api/list?company_id=${company_id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.lists = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching lists:', error);\r\n      }\r\n    },\r\n\r\n    async createList() {\r\n      const company_id = this.companyId;\r\n      const token = localStorage.getItem('access_token');\r\n\r\n      if (!company_id) {\r\n        console.error('company_id not available');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('https://iinfluencer.net/api/list/store', \r\n        {\r\n          company_id: company_id,\r\n          list_name: this.newList.list_name,\r\n          filtering_criteria: this.newList.filtering_criteria\r\n        }, \r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        const createdList = {\r\n          list_name: response.data.list_name,\r\n          filtering_criteria: response.data.filtering_criteria\r\n        };\r\n\r\n        this.lists.push(createdList); // Add the newly created list to the lists array\r\n\r\n        // Reset the form\r\n        this.newList = { list_name: '', filtering_criteria: '' };\r\n\r\n      } catch (error) {\r\n        console.error('Error creating list:', error);\r\n      }\r\n    },\r\n\r\n    async deleteList(id) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`https://iinfluencer.net/api/list/delete/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.lists = this.lists.filter(list => list.id !== id);\r\n      } catch (error) {\r\n        console.error('Error deleting lists :', error);\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchLists();\r\n  }\r\n};\r\n  </script>\r\n  \r\n <style scoped>\r\n @import \"@/assets/css/tablesandframe.css\";\r\n\r\n </style>\r\n "],"mappings":";;;;;;;;;;;;;;;;;;AAwDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACfC,IAAI,EAAE,YAAY;EAElBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QACPC,SAAS,EAAE,EAAE;QACbC,kBAAkB,EAAE;MACtB;IACF,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRA,QAAQ,EAAE;MACZC,SAAS,WAATA,SAASA,CAAA,EAAG;QACV,IAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QAClD,IAAI,CAACF,KAAK,EAAE;UACVG,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;UAC/B,OAAO,IAAI;QACb;QAEA,IAAI;UACF,IAAMC,SAAQ,GAAIL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACrC,IAAMC,MAAK,GAAIF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;UAC9D,IAAMC,WAAU,GAAIC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACM,GAAG,CAAC,UAASC,CAAC,EAAE;YAC1E,OAAO,GAAE,GAAI,CAAC,IAAG,GAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;UAChE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;UAEZd,OAAO,CAACe,GAAG,CAAC,kBAAkB,EAAET,WAAW,CAAC,EAAE;;UAE9C,IAAMU,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACZ,WAAW,CAAC;UAEvC,IAAI,CAACU,OAAO,CAACG,UAAU,EAAE;YACvBnB,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEe,OAAO,CAAC;YAChE,OAAO,IAAI;UACb;UAEA,OAAOA,OAAO,CAACG,UAAU;QAE3B,EAAE,OAAOlB,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,OAAO,IAAI;QACb;MACF;IACF;EACE,CAAC;EAEDmB,OAAO,EAAE;IACDC,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAP,UAAA,EAAAtB,KAAA,EAAA8B,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACXb,UAAS,GAAIG,KAAI,CAAC1B,SAAS;cAC3BC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;cAAA,IAE7CoB,UAAU;gBAAAW,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACbhC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;cAAA,OAAA6B,QAAA,CAAAG,MAAA;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAKlB5C,KAAK,CAAC8C,GAAG,gDAAAC,MAAA,CAAgDhB,UAAU,GAAI;gBAC5FiB,OAAO,EAAE;kBACPC,aAAa,YAAAF,MAAA,CAAYtC,KAAK;gBAChC;cACF,CAAC,CAAC;YAAA;cAJI8B,QAAO,GAAAG,QAAA,CAAAQ,IAAA;cAKbhB,KAAI,CAAC/B,KAAI,GAAIoC,QAAQ,CAACrC,IAAI;cAAAwC,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAE1B9B,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAA6B,QAAA,CAAAS,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEjD,CAAC;IAEKe,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAAnB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAkB,SAAA;QAAA,IAAAxB,UAAA,EAAAtB,KAAA,EAAA8B,QAAA,EAAAiB,WAAA;QAAA,OAAApB,mBAAA,GAAAI,IAAA,UAAAiB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;YAAA;cACXb,UAAS,GAAIuB,MAAI,CAAC9C,SAAS;cAC3BC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;cAAA,IAE7CoB,UAAU;gBAAA2B,SAAA,CAAAd,IAAA;gBAAA;cAAA;cACbhC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;cAAA,OAAA6C,SAAA,CAAAb,MAAA;YAAA;cAAAa,SAAA,CAAAf,IAAA;cAAAe,SAAA,CAAAd,IAAA;cAAA,OAKlB5C,KAAK,CAAC2D,IAAI,CAAC,wCAAwC,EAC1E;gBACE5B,UAAU,EAAEA,UAAU;gBACtB1B,SAAS,EAAEiD,MAAI,CAAClD,OAAO,CAACC,SAAS;gBACjCC,kBAAkB,EAAEgD,MAAI,CAAClD,OAAO,CAACE;cACnC,CAAC,EACD;gBACE0C,OAAO,EAAE;kBACPC,aAAa,YAAAF,MAAA,CAAYtC,KAAK;gBAChC;cACF,CAAC,CAAC;YAAA;cAVI8B,QAAO,GAAAmB,SAAA,CAAAR,IAAA;cAYPM,WAAU,GAAI;gBAClBnD,SAAS,EAAEkC,QAAQ,CAACrC,IAAI,CAACG,SAAS;gBAClCC,kBAAkB,EAAEiC,QAAQ,CAACrC,IAAI,CAACI;cACpC,CAAC;cAEDgD,MAAI,CAACnD,KAAK,CAACyD,IAAI,CAACJ,WAAW,CAAC,EAAE;;cAE9B;cACAF,MAAI,CAAClD,OAAM,GAAI;gBAAEC,SAAS,EAAE,EAAE;gBAAEC,kBAAkB,EAAE;cAAG,CAAC;cAAAoD,SAAA,CAAAd,IAAA;cAAA;YAAA;cAAAc,SAAA,CAAAf,IAAA;cAAAe,SAAA,CAAAP,EAAA,GAAAO,SAAA;cAGxD9C,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAA6C,SAAA,CAAAP,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAO,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEhD,CAAC;IAEKM,UAAU,WAAVA,UAAUA,CAACC,EAAE,EAAE;MAAA,IAAAC,MAAA;MAAA,OAAA5B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA2B,SAAA;QAAA,IAAAvD,KAAA;QAAA,OAAA2B,mBAAA,GAAAI,IAAA,UAAAyB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvB,IAAA,GAAAuB,SAAA,CAAAtB,IAAA;YAAA;cACbnC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;cAAAuD,SAAA,CAAAvB,IAAA;cAAAuB,SAAA,CAAAtB,IAAA;cAAA,OAE1C5C,KAAK,UAAO,4CAAA+C,MAAA,CAA4Ce,EAAE,GAAI;gBAClEd,OAAO,EAAE;kBACPC,aAAa,YAAAF,MAAA,CAAYtC,KAAK;gBAChC;cACF,CAAC,CAAC;YAAA;cACFsD,MAAI,CAAC5D,KAAI,GAAI4D,MAAI,CAAC5D,KAAK,CAACgE,MAAM,CAAC,UAAAC,IAAG;gBAAA,OAAKA,IAAI,CAACN,EAAC,KAAMA,EAAE;cAAA,EAAC;cAAAI,SAAA,CAAAtB,IAAA;cAAA;YAAA;cAAAsB,SAAA,CAAAvB,IAAA;cAAAuB,SAAA,CAAAf,EAAA,GAAAe,SAAA;cAEtDtD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAAqD,SAAA,CAAAf,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAe,SAAA,CAAAd,IAAA;UAAA;QAAA,GAAAY,QAAA;MAAA;IAElD;EACF,CAAC;EAEDK,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpC,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}