{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ListsLists',\n  data: function data() {\n    return {\n      lists: [],\n      newList: {\n        list_name: '',\n        filtering_criteria: ''\n      }\n    };\n  },\n  methods: {\n    fetchLists: function fetchLists() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, base64Url, base64, jsonPayload, _JSON$parse, company_id, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              if (token) {\n                _context.next = 4;\n                break;\n              }\n              console.error('No token found');\n              return _context.abrupt(\"return\");\n            case 4:\n              // Decode the token to extract the company_id\n              base64Url = token.split('.')[1];\n              base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n              jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n              }).join(''));\n              _JSON$parse = JSON.parse(jsonPayload), company_id = _JSON$parse.company_id;\n              if (company_id) {\n                _context.next = 11;\n                break;\n              }\n              console.error('company_id not found in token');\n              return _context.abrupt(\"return\");\n            case 11:\n              _context.prev = 11;\n              _context.next = 14;\n              return axios.get(\"https://iinfluencer.net/api/list?company_id=\".concat(company_id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 14:\n              response = _context.sent;\n              _this.lists = response.data;\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](11);\n              console.error('Error fetching lists:', _context.t0);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[11, 18]]);\n      }))();\n    },\n    createList: function createList() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post('https://iinfluencer.net/api/list/store', {\n                list_name: _this2.list_name,\n                filtering_criteria: _this2.filtering_criteria // Use the selected brand ID\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context2.sent;\n              _this2.lists.push(response.data); // Push the newly created list to the lists array          this.newList = { list_name: '', filtering_criteria: '' }; // Reset the form\n              _this2.list_name = '';\n              _this2.filtering_criteria = ''; // Reset the selected brand ID \n              _this2.company_id = '';\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Error creating list:', _context2.t0);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 11]]);\n      }))();\n    },\n    deleteList: function deleteList(id) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('access_token');\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios[\"delete\"](\"https://iinfluencer.net/api/list/delete/\".concat(id), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _this3.lists = _this3.lists.filter(function (list) {\n                return list.id !== id;\n              });\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('Error deleting product:', _context3.t0);\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 7]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchLists();\n  }\n};","map":{"version":3,"names":["axios","name","data","lists","newList","list_name","filtering_criteria","methods","fetchLists","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","base64Url","base64","jsonPayload","_JSON$parse","company_id","response","wrap","_callee$","_context","prev","next","localStorage","getItem","console","error","abrupt","split","replace","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","get","concat","headers","Authorization","sent","t0","stop","createList","_this2","_callee2","_callee2$","_context2","post","push","deleteList","id","_this3","_callee3","_callee3$","_context3","filter","list","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\ListsLists.vue"],"sourcesContent":["<template>\r\n    <div class=\"content-container\">\r\n      <!-- Table Section -->\r\n      <div class=\"table-section\">\r\n        <div class=\"table-container\">\r\n          <div class=\"product-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>List Name</th>\r\n                  <th>Filtering Criteria</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(list, index) in lists\" :key=\"index\">\r\n                  <td>{{ list.listName }}</td> <!-- List name -->\r\n                  <td>{{ list.filteringCriteria || 'N/A' }}</td> <!-- Show description or fallback text -->\r\n                  <td>\r\n                    <button class=\"delete-button\" @click=\"deleteList(list.id)\">\r\n                      üóëÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add List Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"add-product-form\">\r\n          <h3>Add New List</h3>\r\n          <form @submit.prevent=\"createList\">\r\n            <div class=\"input-group\">\r\n              <label for=\"listName\">\r\n                <input type=\"text\" v-model=\"newList.list_name\" placeholder=\"List Name\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"filteringCriteria\">\r\n                <input type=\"text\" v-model=\"newList.filtering_criteria\" placeholder=\"Filtering Criteria\" />\r\n              </label>\r\n            </div>\r\n  \r\n            <button type=\"submit\" class=\"add-product-button\">Add New List</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'ListsLists',\r\n  \r\n    data() {\r\n      return {\r\n        lists: [], \r\n        newList: {\r\n            list_name: '', \r\n            filtering_criteria: '' \r\n      },\r\n      };\r\n    },\r\n    methods: {\r\n    async fetchLists() {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      // Decode the token to extract the company_id\r\n      const base64Url = token.split('.')[1];\r\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      }).join(''));\r\n\r\n      const { company_id } = JSON.parse(jsonPayload);\r\n\r\n      if (!company_id) {\r\n        console.error('company_id not found in token');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`https://iinfluencer.net/api/list?company_id=${company_id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.lists = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching lists:', error);\r\n      }\r\n    }\r\n      ,\r\n      async createList() {\r\n        const token = localStorage.getItem('access_token');\r\n\r\n        try {\r\n          const response = await axios.post('https://iinfluencer.net/api/list/store', \r\n          {\r\n            list_name: this.list_name,\r\n            filtering_criteria: this.filtering_criteria // Use the selected brand ID\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n          this.lists.push(response.data); // Push the newly created list to the lists array          this.newList = { list_name: '', filtering_criteria: '' }; // Reset the form\r\n          this.list_name = '';\r\n          this.filtering_criteria = ''; // Reset the selected brand ID \r\n          this.company_id='';\r\n\r\n\r\n        } catch (error) {\r\n          console.error('Error creating list:', error);\r\n        }\r\n      },\r\n    async deleteList(id) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`https://iinfluencer.net/api/list/delete/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.lists = this.lists.filter(list => list.id !== id);\r\n      } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n      }\r\n    }\r\n  },\r\n\r\n    mounted() {\r\n      this.fetchLists();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n <style scoped>\r\n @import \"@/assets/css/tablesandframe.css\";\r\n\r\n </style>\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}