{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Desktop/New folder/influincer_markiting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ListsLists',\n  data: function data() {\n    return {\n      lists: [],\n      list_name: '',\n      filtering_criteria: ''\n    };\n  },\n  methods: {\n    fetchLists: function fetchLists() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('https://iinfluencer.net/api/list', {\n                headers: {\n                  Authorization: \"Bearer \".concat(localStorage.getItem('access_token'))\n                }\n              });\n            case 3:\n              response = _context.sent;\n              _this.lists = response.data;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching lists:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    createList: function createList() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('https://iinfluencer.net/api/list/store', _this2.newList, {\n                headers: {\n                  Authorization: \"Bearer \".concat(localStorage.getItem('access_token'))\n                }\n              });\n            case 3:\n              response = _context2.sent;\n              _this2.lists.push(response.data);\n              _this2.showCreateModal = false;\n              _this2.newList = {\n                list_name: '',\n                filtering_criteria: ''\n              };\n              _context2.next = 12;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error creating list:', _context2.t0);\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 9]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchLists();\n  }\n};","map":{"version":3,"names":["axios","name","data","lists","list_name","filtering_criteria","methods","fetchLists","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","headers","Authorization","concat","localStorage","getItem","sent","t0","console","error","stop","createList","_this2","_callee2","_callee2$","_context2","post","newList","push","showCreateModal","mounted"],"sources":["C:\\Users\\ASUS\\Desktop\\New folder\\influincer_markiting\\src\\components\\ListsLists.vue"],"sourcesContent":["<template>\r\n    <div class=\"content-container\">\r\n      <!-- Table Section -->\r\n      <div class=\"table-section\">\r\n        <div class=\"table-container\">\r\n          <div class=\"list-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>FILTERING CRITERIA</th>\r\n                  <th>LIST NAME</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(list, index) in lists\" :key=\"index\">\r\n                  <td class=\"criteria-info\">\r\n                    <span>{{ list.filteringCriteria }}</span>\r\n                  </td>\r\n                  <td>{{ list.listName }}</td> <!-- List name -->\r\n                  <td>\r\n                    <button class=\"delete-button\" @click=\"deleteList(list.id)\">\r\n                      üóëÔ∏è\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add List Section -->\r\n      <div class=\"form-section\">\r\n        <div class=\"add-list-form\">\r\n          <h3>Add New List</h3>\r\n          <form @submit.prevent=\"addList\">\r\n            <div class=\"input-group\">\r\n              <label for=\"listName\">\r\n                <input type=\"text\" v-model=\"newListName\" placeholder=\"List Name\" />\r\n              </label>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"filteringCriteria\">\r\n                <input type=\"text\" v-model=\"newFilteringCriteria\" placeholder=\"Filtering Criteria\" />\r\n              </label>\r\n            </div>\r\n  \r\n            <button type=\"submit\" class=\"add-list-button\">Add List</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'ListsLists',\r\n\r\n    data() {\r\n      return {\r\n        lists: [],\r\n          list_name: '',\r\n          filtering_criteria: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchLists() {\r\n        try {\r\n          const response = await axios.get('https://iinfluencer.net/api/list', {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\r\n          });\r\n          this.lists = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching lists:', error);\r\n        }\r\n      },\r\n      async createList() {\r\n        try {\r\n          const response = await axios.post('https://iinfluencer.net/api/list/store', this.newList, {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\r\n          });\r\n          this.lists.push(response.data);\r\n          this.showCreateModal = false;\r\n          this.newList = {  list_name: '', filtering_criteria: '' };\r\n        } catch (error) {\r\n          console.error('Error creating list:', error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchLists();\r\n    },\r\n  };\r\n  </script>\r\n \r\n  \r\n <style scoped>\r\n @import \"@/assets/css/tablesandframe.css\";\r\n\r\n </style>\r\n "],"mappings":";;;AAwDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACPC,SAAS,EAAE,EAAE;MACbC,kBAAkB,EAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEQlB,KAAK,CAACmB,GAAG,CAAC,kCAAkC,EAAE;gBACnEC,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;gBAAG;cAC7E,CAAC,CAAC;YAAA;cAFIX,QAAO,GAAAG,QAAA,CAAAS,IAAA;cAGbjB,KAAI,CAACL,KAAI,GAAIU,QAAQ,CAACX,IAAI;cAAAc,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;cAE1BW,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAAZ,QAAA,CAAAU,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAa,IAAA;UAAA;QAAA,GAAAjB,OAAA;MAAA;IAEjD,CAAC;IACKkB,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAAtB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAqB,SAAA;QAAA,IAAAnB,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAmB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjB,IAAA,GAAAiB,SAAA,CAAAhB,IAAA;YAAA;cAAAgB,SAAA,CAAAjB,IAAA;cAAAiB,SAAA,CAAAhB,IAAA;cAAA,OAEQlB,KAAK,CAACmC,IAAI,CAAC,wCAAwC,EAAEJ,MAAI,CAACK,OAAO,EAAE;gBACxFhB,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;gBAAG;cAC7E,CAAC,CAAC;YAAA;cAFIX,QAAO,GAAAqB,SAAA,CAAAT,IAAA;cAGbM,MAAI,CAAC5B,KAAK,CAACkC,IAAI,CAACxB,QAAQ,CAACX,IAAI,CAAC;cAC9B6B,MAAI,CAACO,eAAc,GAAI,KAAK;cAC5BP,MAAI,CAACK,OAAM,GAAI;gBAAGhC,SAAS,EAAE,EAAE;gBAAEC,kBAAkB,EAAE;cAAG,CAAC;cAAA6B,SAAA,CAAAhB,IAAA;cAAA;YAAA;cAAAgB,SAAA,CAAAjB,IAAA;cAAAiB,SAAA,CAAAR,EAAA,GAAAQ,SAAA;cAEzDP,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAAM,SAAA,CAAAR,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAQ,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAEhD;EACF,CAAC;EACDO,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChC,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}